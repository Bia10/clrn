// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: job.proto

#ifndef PROTOBUF_job_2eproto__INCLUDED
#define PROTOBUF_job_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "data.pb.h"
// @@protoc_insertion_point(includes)

namespace jobs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_job_2eproto();
void protobuf_AssignDesc_job_2eproto();
void protobuf_ShutdownFile_job_2eproto();

class Job;

enum Job_JobId {
  Job_JobId_EMPTY = 1,
  Job_JobId_GET_MODULES = 2,
  Job_JobId_GET_SETTINGS = 3,
  Job_JobId_SET_SETTINGS = 4,
  Job_JobId_EXEC_SCRIPT = 5,
  Job_JobId_EXEC_PROCEDURE = 6,
  Job_JobId_PING_HOST = 7,
  Job_JobId_GET_PACKET = 8,
  Job_JobId_GET_EVENT = 9,
  Job_JobId_SET_EVENT = 10
};
bool Job_JobId_IsValid(int value);
const Job_JobId Job_JobId_JobId_MIN = Job_JobId_EMPTY;
const Job_JobId Job_JobId_JobId_MAX = Job_JobId_SET_EVENT;
const int Job_JobId_JobId_ARRAYSIZE = Job_JobId_JobId_MAX + 1;

const ::google::protobuf::EnumDescriptor* Job_JobId_descriptor();
inline const ::std::string& Job_JobId_Name(Job_JobId value) {
  return ::google::protobuf::internal::NameOfEnum(
    Job_JobId_descriptor(), value);
}
inline bool Job_JobId_Parse(
    const ::std::string& name, Job_JobId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Job_JobId>(
    Job_JobId_descriptor(), name, value);
}
// ===================================================================

class Job : public ::google::protobuf::Message {
 public:
  Job();
  virtual ~Job();
  
  Job(const Job& from);
  
  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job& default_instance();
  
  void Swap(Job* other);
  
  // implements Message ----------------------------------------------
  
  Job* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Job_JobId JobId;
  static const JobId EMPTY = Job_JobId_EMPTY;
  static const JobId GET_MODULES = Job_JobId_GET_MODULES;
  static const JobId GET_SETTINGS = Job_JobId_GET_SETTINGS;
  static const JobId SET_SETTINGS = Job_JobId_SET_SETTINGS;
  static const JobId EXEC_SCRIPT = Job_JobId_EXEC_SCRIPT;
  static const JobId EXEC_PROCEDURE = Job_JobId_EXEC_PROCEDURE;
  static const JobId PING_HOST = Job_JobId_PING_HOST;
  static const JobId GET_PACKET = Job_JobId_GET_PACKET;
  static const JobId GET_EVENT = Job_JobId_GET_EVENT;
  static const JobId SET_EVENT = Job_JobId_SET_EVENT;
  static inline bool JobId_IsValid(int value) {
    return Job_JobId_IsValid(value);
  }
  static const JobId JobId_MIN =
    Job_JobId_JobId_MIN;
  static const JobId JobId_MAX =
    Job_JobId_JobId_MAX;
  static const int JobId_ARRAYSIZE =
    Job_JobId_JobId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  JobId_descriptor() {
    return Job_JobId_descriptor();
  }
  static inline const ::std::string& JobId_Name(JobId value) {
    return Job_JobId_Name(value);
  }
  static inline bool JobId_Parse(const ::std::string& name,
      JobId* value) {
    return Job_JobId_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .jobs.Job.JobId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::jobs::Job_JobId id() const;
  inline void set_id(::jobs::Job_JobId value);
  
  // repeated .data.Table params = 2;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::data::Table& params(int index) const;
  inline ::data::Table* mutable_params(int index);
  inline ::data::Table* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::data::Table >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::data::Table >*
      mutable_params();
  
  // repeated .data.Table results = 3;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 3;
  inline const ::data::Table& results(int index) const;
  inline ::data::Table* mutable_results(int index);
  inline ::data::Table* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::data::Table >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::data::Table >*
      mutable_results();
  
  // @@protoc_insertion_point(class_scope:jobs.Job)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::data::Table > params_;
  ::google::protobuf::RepeatedPtrField< ::data::Table > results_;
  int id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_job_2eproto();
  friend void protobuf_AssignDesc_job_2eproto();
  friend void protobuf_ShutdownFile_job_2eproto();
  
  void InitAsDefaultInstance();
  static Job* default_instance_;
};
// ===================================================================


// ===================================================================

// Job

// required .jobs.Job.JobId id = 1;
inline bool Job::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Job::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Job::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Job::clear_id() {
  id_ = 1;
  clear_has_id();
}
inline ::jobs::Job_JobId Job::id() const {
  return static_cast< ::jobs::Job_JobId >(id_);
}
inline void Job::set_id(::jobs::Job_JobId value) {
  GOOGLE_DCHECK(::jobs::Job_JobId_IsValid(value));
  set_has_id();
  id_ = value;
}

// repeated .data.Table params = 2;
inline int Job::params_size() const {
  return params_.size();
}
inline void Job::clear_params() {
  params_.Clear();
}
inline const ::data::Table& Job::params(int index) const {
  return params_.Get(index);
}
inline ::data::Table* Job::mutable_params(int index) {
  return params_.Mutable(index);
}
inline ::data::Table* Job::add_params() {
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Table >&
Job::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::data::Table >*
Job::mutable_params() {
  return &params_;
}

// repeated .data.Table results = 3;
inline int Job::results_size() const {
  return results_.size();
}
inline void Job::clear_results() {
  results_.Clear();
}
inline const ::data::Table& Job::results(int index) const {
  return results_.Get(index);
}
inline ::data::Table* Job::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::data::Table* Job::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Table >&
Job::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::data::Table >*
Job::mutable_results() {
  return &results_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jobs

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::jobs::Job_JobId>() {
  return ::jobs::Job_JobId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_job_2eproto__INCLUDED
