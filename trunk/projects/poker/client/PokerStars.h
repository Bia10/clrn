/*
   This file has been generated by IDA Pro.
   It contains local type definitions from
     C:\Program Files (x86)\PokerStars\PokerStars.idb
*/

#include <wtypes.h>
#include <string>
#include <assert.h>

#pragma pack(push, 1)
struct DataValues
{
	char Data[1024];
};

#pragma pack(pop)

/*   18 */
#pragma pack(push, 1)
struct StringData
{
  char *StringPtr;
  DWORD Size1;
  DWORD Size2;
};
#pragma pack(pop)

/*   22 */
#pragma pack(push, 1)
struct DataBlock
{
  char *StringBody;
  StringData StringData;
  DWORD Offset;
  int* SomePointer;
  DataValues* Values;
  DWORD Size;
  DWORD dword20;
};
#pragma pack(pop)

/*    6 */
#pragma pack(push, 1)
struct MessageRecord
{
	DataBlock *Block;
	DWORD BytesParsed;
	DWORD FieldType;
	DWORD dwordC;
	DWORD dword10;
	DWORD *Something;
	StringData *StringData;
	DWORD dword1C;
	DataBlock *DataBlock2;

	MessageRecord()
		: Block(0)
		, BytesParsed(0)
		, FieldType(0)
		, dword1C(0)
	{

	}

	template<typename T>
	void Extract(T& value)
	{
		assert(!FieldType);

		const BYTE* values = reinterpret_cast<const BYTE*>(Block->Values);
		values += Block->Offset;
		values += BytesParsed;

		value = *reinterpret_cast<const T*>(values);
		BytesParsed += sizeof(T);
	}

	template<>
	void Extract<std::string>(std::string& value)
	{
		assert(!FieldType);

		const char* values = reinterpret_cast<const char*>(Block->Values);
		values += Block->Offset;
		values += BytesParsed;

		value.assign(values);
		BytesParsed += (value.size() + 1);
	}

	void SetParsedBytes(DWORD parsed)
	{
		BytesParsed = parsed;
	}
};
#pragma pack(pop)


/*    8 */
#pragma pack(push, 1)
struct Table
{
	BYTE f0[68];
	DWORD *pdword44;
	BYTE f48[244];
	DWORD dword13C;
	BYTE f140[5320];
	DWORD dword1608;
	DWORD CardCount;
	BYTE f1610[156];
	void *pvoid16AC;
	BYTE IsChanged;
	char _padding[3];
};
#pragma pack(pop)

/*   33 */
struct HandleMessagesArgument
{
	BYTE f0[144];
	Table *ptable90;
	BYTE f94[20];
	void *pvoidA8;
};

struct WindowMessage
{
	DWORD Int1;
	DWORD Int2;
	DWORD Int3;
	DWORD* Int4;
	DWORD* Int5;
	DWORD* Int6;
	DWORD Int7;
	DWORD Int8;
	DataBlock Block;
};



/* End of file */
