+ реализовать и покрыть юнит-тестами получение рук по картам
	+ написать юни-тесты для кикера трипса
	+ написать юни-тесты для GoodDraw, TopDraw
+ реализовать механизм определения опасности карт(т.е. у оппонента возможное дро, и на флоп выходит карта которая может его закрыть, карта должна быть опознана как опасная, так же этот механизм нужно использовать для блефа)
	- добавить характеристику стола, в класс Board енум вида: StraightDraw, EasyStraighDraw, FlushDraw, Pair, ThreeOfKind, Ace
		- весь поиск по статистике производить с учетом характеристики текущего стола
		- при расчете вероятности колла оппонента мы будет иметь вероятность колла на именно таком столе, что даст нам возможность блефовать в случае опасных столов
- проапдейтить базу статистики с новыми картами/столами
	- битовые поля характеристик будут хранится как массив дл удобства поиска оператором $all
	+ написать конверташку битовых полей в массив
- дописать в каждое действие в базе причину(действие вызвавшее это)
- использовать позицию при поиске действий в базе
- механизм расчета вероятности примерно такой:
	- определяем все возможные комбинации рук противника и их вероятности с учетом предыдущих действий игрока
	- вытаскиваем стату по игроку как часто он фолдит к размеру ставки - получаем параметр, насколько он охотно идет на вскрытие
	- вытаскиваем стату по игроку как часто он коллирует/рейзит при каждой возможной руке
		- расчет таких шансов нельзя произвести напрямую, т.к. мы не знаем руки оппонента если он сделал фолд, поэтому мы не можем взять соотношение колл/фолд именно с такой рукой
		1)
			поэтому для таких расчетов будет браться общее число фолдов поделенное на вероятность того что игрок имеет предполагаемую руку
			пример: на флопе 3 пики флешдро, у оппонента предполагаемая пара(Pair)(так же предполагаются карты с которыми он заходил на префлопе BothHigh | Ace), смотрим по статитистике как часто он заходит в банк с такими картами
			например вероятность того что он заходит с BothHigh | Ace равна 40%, вытаскиваем все действия оппонента по его текущей позиции, текущей доске и характеристике руки(Pair), понимаем что в статистике 100 фолдов и 20 коллов(LowBet), 10 коллов(HighBet)
			расчитываем примерное кол-во фолдов которые полагались на руку BothHigh | Ace для каждой возмодной ставке, для LowBet: 100 * 40% = 40, делим кол-во коллов на фолды 20 / 40 = 50% что оппонент заколлирует LowBet имея пару с флешем на доске
																														для HighBet: 100 * 40% = 40, делим кол-во коллов на фолды 10 / 40 = 25% что оппонент заколлирует HighBet имея пару с флешем на доске
		2)
			недостаток первого способа в том что мы делим кол-во фолдов на очень средний шанс того что у оппонента была именно эта рука.
			можно вытаскивать статистику с условиями: флоп попадает под описание, на этой улице с нужной позиции игрок выполняет действия, рука игрока попадает под описание. далее агрегируем все совершаемые игроком действия,
			call VeryLowBet принимаем за 100%, тогда для остальных действий можно вычислисть вероятность = VeryLow кол-во коллов / HighBet колв-во коллов = % HighBet call
		3)
			второй способ тоже не очень т.к. зависит от того были ли нужные ставки. поэтому некое усовершенствование первого способа:
			предполагаемая рука оппонента выводится из его прдполпгпемых карт на префлопе, поэтому для расчета конкретной предполагаемой руки можем использовать игры, где флоп соотвтествует описанию и игрок открыл руку, 
			которая подпадает под конкретное расчитываеое описание. Итого: берем все игры где такой же флоп и у оппонента точно известна рука - совпадает с текущей расчитываемой, для всех таких игр находим действие игрока 
			на нужной улице из нужной позиции на определенную ставку. Получаем набор действий к ставке, группируем, считаем вероятность call/fold/raise для каждой ставки.
	- получаем для каждой определенной руки соперника процент выигрыша бота(сравниваем карты оппонента с картами бота и с доской)
	- расчитываем все возможные размеры ставок бота, получаем EV для каждого действия, выбираем максимальное
	- просчитываем наперед возможные действия оппонента и реакцию бота на них, т.е. просчитваем что будет если на следующей улице оппонент повторит свое действие, например рейзнет или заколлирует, сможет ли бот продолжить игру